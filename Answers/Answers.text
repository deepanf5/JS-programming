1. 
let numbers = [1,2,3,4,5,6,7,8,9,10];
let max = numbers[0];
let min = numbers[1];

for(let i = 0; i < numbers.length; i++) {
  
  if(max < numbers[i]) max = numbers[i]
  if(min > numbers[i]) min = numbers[i]
}

console.log(`Max is ${max} and Min is ${min}`)


2.Answer 
let numbers = [1,2,3,4,5,6,7,8,9,10];
let max = numbers[0];
let secondMax = -Infinity;

for(let i = 0; i < numbers.length; i++) {
  if(max < numbers[i]) {
    secondMax = max;
    max  = numbers[i]
  }
  else if(max !== numbers[i] && secondMax < numbers[i]) {
    secondMax = numbers[i];
  }
}

console.log(`Max is ${max} and secondMax is ${secondMax}`);

3. Answer
let str = "racecar";
let findPalindrome = (str) => {
  let j = str.length - 1
  for(let i = 0; i < str.length - 1; i++) {
    if(str[i] !== str[j]) return false
    j--;
  }
  return true
}

console.log(findPalindrome(str));

4. Answer
let number = 121;
let temp = number;
let sum = 0;

while(number) {
  let rem = number % 10;
  sum = sum * 10 + rem;
  number = parseInt(number / 10);
}

if(temp === sum) console.log("prime number")
else console.log("Not a prime number");


5. Answer
let number = 7;
let isPrime = true;

for(let i = 2; i < number; i++) {
  if(number % i === 0) {
    isPrime = false;
    break;
  }
}
if(isPrime) console.log(`${number} is Prime`)
else console.log(`${number} is not Prime`)

6. Answer
let limit = 40;

let checkPrime = (number) => {
    if(number < 2) return false;
    for(let i = 2; i < number; i++) {
      if(number % i === 0) return false
    }
    
  return true;
}

let printPrimes = (limit) => {
  for(let i = 0; i < limit; i++) {
    if(checkPrime(i)) {
      console.log(`${i}`);
    }
  }
}

printPrimes(limit);

7. Answer
let limit = 20;
let num1 = 1;
let num2 = 0;
let nextNum = num1 + num2;

for(let i = 2; i < limit; i++) {
  console.log(`${nextNum}`)
  num1 = num2;
  num2 = nextNum;
  nextNum = num1 + num2;
}

8. Answer
let array = [[1,664,243],[9,-5,7]];
let max = array[0][0];

for(let numbers of array){
  for(let n of numbers ) {
    if(max < n) max = n
  }
}
console.log(`Max is ${max}`);

9 Answer
let numbers = [1,1,2,3,4,4,5];
let unique = [];

for(let i = 0; i < numbers.length; i++) {
  let currentNum = numbers[i];
  let isDuplicate = false;
  
  for(let j = 0; j < unique.length; j++) {
    if(currentNum === unique[j]) {
      isDuplicate = true;
    }
  }
  
  if(!isDuplicate) unique.push(currentNum);

}

console.log(unique);

10. Answer
let str = "racecar";
let freq = {}

let freqCount = (str) => {
  str.split('')
  .forEach((l) => {
   freq[l] = (freq[l] || 0) + 1;
  })
   return freq
}

console.log(freqCount(str));

11 Answer

let num = [1,2,1,3,1,4,5];
let freq = {}

let countFreq = (num) => {
  
  num.forEach((n) => {
    freq[n] = (freq[n] || 0) + 1
  })
  
  return freq;
}

console.log(countFreq(num));

11 Answer

let number = [1,2,3,4,5,6,1,5,2,4,8];
let freq = {}

let countFreq = (num) => {
  num.forEach((n) => {
    freq[n] = (freq[n] || 0) + 1;
  })
  
  return Object.fromEntries(
  Object.entries(freq).filter(([key,val]) => val > 1)
  )
}

console.log(countFreq(number))

13 Answer
let str = "mark Antony good bad ugly";

let converPascal = (str) => {
  
return str.split(' ').map((w) => {
 return  w.charAt(0).toUpperCase() + w.slice(1).toLowerCase()
}).join('')

}


console.log(converPascal(str));

14 Answer
let number = [1,5,10];

let findMiss = (num) => {
  let result = [];
  let start = num[0];
  let end = num[num.length - 1];
  
  for(let i = start; i < end; i++) {
    if(!num.includes(i)) {
      result.push(i)
    }
  }
  
  return result;
}

console.log(findMiss(number));

15 Answer
let numbers = [6,4,2,12,5,0,-1,-8];

let sortBY = (num) => {
  
  return num.sort((a,b) => a - b)
}

console.log(sortBY(numbers));

16 Answer
let target = 5;
let number = [1,5,2,8,2,20,4,3];

for(let i = 0; i < number.length; i++) {
  for(let j = i + 1; j < number.length; j++) {
    if(number[i] + number[j] === target) {
      console.log(`${number[i]} + ${number[j]} = ${number[i] + number[j]}`)
    }
  }
}

17 Answer

let numbers = [-9,0,5,1];
let sum = 0;

let sumPositive = (num) => {
  
  num.forEach((n) => {
    if(n > 0) {
      sum += n;
      
    }
  })
  
  return sum
}
console.log(sumPositive(numbers));

18 
const str = "This is a test string with vowels";
const vowels = "aeiouAEIOU"

let removevowels = (str) => {
  
  return str.split('').filter((l) => !vowels.includes(l)).join('')
}

console.log(removevowels(str));

19  Answer

const str = "This is a test string with vowels";

let sortBy = (str) => {
  
  return str.split('').sort((a,b) => a.localeCompare(b)).join('').trim()
}

console.log(sortBy(str));

20 Answer

function sortStrings(arr) {
  return arr.sort();
}
const strings = ["apple", "banana", "cherry", "date", "elderberry"];
console.log(sortStrings(strings)); 


21 Answer

let a = 5;
let b = 1;

a = a + b;
b = a - b;
a = a - b;

let a = 5;
let b = 1;

a = a + b;
b = a - b;
a = a - b

console.log(a);
console.log(b);
22. Answer 

let sortArray = (arr1,arr2) => {
    
    let merged = []
    let i = 0;
    let j = 0;
    
    while(i < arr1.length || j < arr2.length) {
        
        if(j >= arr2.length || (i < arr1.length && arr1[i] < arr2[j])) {
            
            merged.push(arr1[i])
        i++;
        }
        else {
            merged.push(arr2[j])
            j++;
        }
        
    }

       for(let i  = 0; i < merged.length; i++) {
        for(let j = i + 1; j < merged.length;j++) {
            if(merged[j] < merged[i]) {
                let temp = merged[i]
                merged[i] = merged[j]
                merged[j] = temp
            }
        }
    }
    
    return merged
}

console.log(sortArray([1, 3, 5, 7],[2, 4, 6, 8]));

23. 
function concatenateItems(arr) {
let str2 = ""

arr.map(val => {
    str2 += val.split(' ')
})
return str2
    
}

24. 

let str = "hello world";

let capitalize = str.split(' ').map((w) => {
  
  return w.charAt(0).toUpperCase() + w.slice(1)
}).join(' ')

console.log(capitalize);
